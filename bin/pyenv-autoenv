# pyenv-autoenv
#
# Installation:
#   Add this line to your .bashrc / .zshrc / .zshenv
#
#   source ~/.pyenv/plugins/pyenv-autoenv/bin/pyenv-autoenv
#

function _python_version_auto_install() {
    if [ -e ".python-version" ];then
        _PY_VERSION=$(cat .python-version)
        if [ "$_PY_VERSION" != "system" -a ! -d "$PYENV_ROOT/versions/$_PY_VERSION" ];then
            echo "Installing Python $_PY_VERSION"
            pyenv install $_PY_VERSION
            pyenv rehash
        fi

    fi
}

function _virtualenv_auto_activate() {
    if [ -e ".python-env" ]; then
        # Check for file containing name of virtualenv
        if [ -f ".python-env" ]; then
          _VENV_PATH=$WORKON_HOME/$(cat .python-env)
        else
          return
        fi

        # Check to see if already activated to avoid redundant activating
        if [ "$VIRTUAL_ENV" != $_VENV_PATH ]; then
          _VENV_NAME=$(basename $_VENV_PATH)
          # if venv does not exists create
          if [ -d "$_VENV_PATH" ];then
            workon $_VENV_NAME
          else
            #echo "Virtualenv $_VENV_NAME does not exist. Adding with current python -> $(cat .python-version)"
            echo "Virtualenv $_VENV_NAME does not exist."
            #mkvirtualenv $_VENV_NAME --python $PYENV_ROOT/versions/$(cat .python-version)/bin/python
            #workon $_VENV_NAME
          fi
          # echo Activated virtualenv \"$_VENV_NAME\".
        fi
    fi
}

function _env_auto_source() {
    if [ -f ".env" ]; then
        source .env
    else
        return
    fi
}

function _autoenv_activate() {
    #_python_version_auto_install
    _virtualenv_auto_activate
    _env_auto_source
}

if [ -n "$ZSH_VERSION" ]; then
    chpwd_functions+=(_autoenv_activate)
    export $chpwd_functions
    _autoenv_activate
fi
